name: build-cookbook
on: [push]
jobs:
  set_release_number:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Debug - Dump env
        run: env | sort
      - name: Debug - Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: "call action"
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          view_top: 1
      - name: Debug check files 1
        run: |
          ls
          cat revision-number-major.txt
          cat revision-number-minor.txt
      - name: Build Revision Number Files
        run: |
          RAW_TAG="${{ steps.last_release.outputs.tag_name }}"
          VERSION_TAG="${RAW_TAG:1}"
          IFS=';'
          read -ra VERSION_PART <<< "$VERSION_TAG"
          echo "$VERSION_PART[0]" > revision-number-major.txt
          echo "$VERSION_PART[1]" > revision-number-minor.txt
      - name: Debug check files 2
        run: |
          ls
          cat revision-number-major.txt
          cat revision-number-minor.txt
      - name: Check in Revision number files
        uses: EndBug/add-and-commit@v7.0.0
        with:
          message: 'Update revision files v${{ env.DOCUMENT_VERSION }}'
          add: 'revision-number-*.txt --force'
  build_publishable:
    needs: set_release_number
    runs-on: ubuntu-latest
    env:
      input_rst_file: RodneyFavoriteRecipes.rst
      input_html_rst_file: RodneyFavoriteRecipes.html.rst
      build_temp_file: RodneyFavoriteRecipes.rst.build_temp
      pdf: RodneyFavoriteRecipes.pdf
      html: RodneyFavoriteRecipes.html
      epub: RodneyFavoriteRecipes.epub
      TEMP_SUBSTITUTION_FILE: temp_substitutions.rst
      REVISION_MAJOR_NUMBER_FILE: revision-number-major.txt
      REVISION_MINOR_NUMBER_FILE: revision-number-minor.txt
      CHECKIN_MSG_FILE: checkin_msg.temp
    steps:
    - uses: actions/checkout@v2
    - name: Set aside revisions
      run: |
        if test -f $REVISION_MAJOR_NUMBER_FILE; then mv $REVISION_MAJOR_NUMBER_FILE $REVISION_MAJOR_NUMBER_FILE.ori; fi
        if test -f $REVISION_MINOR_NUMBER_FILE; then mv $REVISION_MINOR_NUMBER_FILE $REVISION_MINOR_NUMBER_FILE.ori; fi
    - name: Download Revision Number File artifacts
      id: getRevNums
      uses: actions/download-artifact@v2
      with:
        name: revision-numbers
      continue-on-error: true
    - name: Update revision and build temp substitution file
      run: |
        ls -al
        if ! test -f $REVISION_MINOR_NUMBER_FILE; then echo 0 > $REVISION_MINOR_NUMBER_FILE; fi
        if ! test -f $TEMP_SUBSTITUTION_FILE; then echo $(($(cat $REVISION_MINOR_NUMBER_FILE) + 1)) > $REVISION_MINOR_NUMBER_FILE; fi
        echo "DOCUMENT_VERSION=$(cat $REVISION_MAJOR_NUMBER_FILE).$(cat $REVISION_MINOR_NUMBER_FILE)" >> $GITHUB_ENV
        echo ".. |Date| replace:: $(date +%B\ %d\,\ %Y)"  > $TEMP_SUBSTITUTION_FILE
        echo "  "  >> $TEMP_SUBSTITUTION_FILE
        echo ".. |Revision| replace:: $(cat $REVISION_MAJOR_NUMBER_FILE).$(cat $REVISION_MINOR_NUMBER_FILE)" >> $TEMP_SUBSTITUTION_FILE
        echo "  " >> $TEMP_SUBSTITUTION_FILE
    - name: Debug - Version Number
      run: echo "Building Document version ${{ env.DOCUMENT_VERSION }}"
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install apt dependencies
      run: |
        sudo apt-get update && sudo apt-get -y install plantuml libxml2-dev libxslt-dev python3-dev
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade rst2pdf 
        python -m pip install --upgrade rst2html
        python -m pip install --upgrade rst2html5
    - name: Install Calabre
      run: |
        sudo apt-get update && sudo apt-get -y install calibre
    - name: Build pdf
      run: |
        rm -fR *.build_temp
        echo "Creating PDF..."
        rst2pdf $input_rst_file \
          --break-level=1 \
          --section-header-depth=1 \
          --fit-background-mode=scale \
          --smart-quotes=0 \
          --fit-literal-mode=shrink \
          --repeat-table-rows \
          --stylesheets=Cookbook.style \
          --output="$pdf" \
          --strip-elements-with-class=handout \
          --extension-module=preprocess
        rm -fR *.build_temp
    - name: Build html
      run: |
        echo "Creating HTML..."
        rst2html5 \
            --stylesheet-inline=Cookbook.css \
            --strip-elements-with-class=handout \
            --strip-comments \
            $input_html_rst_file \
            "$html"
        rm -fR *.build_temp
    - name: Build epub
      run: |
        echo "Creating EPUB..."
        ebook-convert "$html" "$epub" \
          --title "Recipes From the Messy Chef" \
          --authors "Rodney Shupe" \
          --author-sort "Shupe Rodney" \
          --language English \
          --comments "A collection of recipes containing the favorites of Rodney Shupe and family." \
          --tags Cookbook,Cooking,Recipes \
          --cover Cover.png \
          --max-toc-links 29 \
          --embed-all-fonts > /dev/null
    - name: Save output files
      uses: actions/upload-artifact@v2
      with:
        name: published-files
        path: |
          ${{ env.pdf }}
          ${{ env.epub }}
    - name: Tidy Up
      run: |
        rm -fR *.build_temp
        rm -f $TEMP_SUBSTITUTION_FILE
    - name: Tag and Release
      uses: jasondavis303/tag-and-release-and-upload@v1.2.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        version: v${{ env.DOCUMENT_VERSION }}
        assets: '[ "${{ env.pdf }}", "${{ env.epub }}" ]'
        overwrite: false
  upload-ssh:
    needs: build_publishable
    runs-on: ubuntu-latest
    env:
      pdf: RodneyFavoriteRecipes.pdf
      epub: RodneyFavoriteRecipes.epub
    steps:
    - name: Download latest putput files.
      uses: actions/download-artifact@v2
      with:
        name: published-files
    - name: Debug - Check files.
      run: ls -al
    - name: Upload via SSH
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_VPS_HOST }}
        username: ${{ secrets.SSH_VPS_USERNAME }}
        port: ${{ secrets.SSH_VPS_PORT }}
        key: ${{ secrets.SSH_VPS_KEY }}
        source: "*"
        target: "Cooking"
        overwrite: true
    # TODO: Add rclone mechnism