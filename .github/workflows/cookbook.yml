name: "Publish Cookbook"

on: [push]

env:
  PARAM_PDF_SOURCE_RST: RodneyFavoriteRecipes.rst
  PARAM_HTML_SOURCE_RST: RodneyFavoriteRecipes.html.rst
  PARAM_PUBLISHED_PDF: RodneyFavoriteRecipes.pdf
  PARAM_PUBLISHED_HTML: RodneyFavoriteRecipes.html
  PARAM_PUBLISHED_EPUB: RodneyFavoriteRecipes.epub
  REVISION_MAJOR_NUMBER_FILE: revnum_major.txt
  REVISION_MINOR_NUMBER_FILE: revnum_minor.txt

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug - Dump env
        run: env | sort

      - name: Debug - Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  set_release_number:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get latest release
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          view_top: 1

      - name: Build Revision Number Files
        run: |
          RAW_TAG="${{ steps.last_release.outputs.tag_name }}"
          VERSION_TAG="${RAW_TAG:1}"
          IFS='.'
          read -ra VERSION_PART <<< "$VERSION_TAG"
          echo "${VERSION_PART[0]}" > ${{ env.REVISION_MAJOR_NUMBER_FILE }}
          echo "${VERSION_PART[1]}" > ${{ env.REVISION_MINOR_NUMBER_FILE }}

      - name: Increment minor revision
        run: |
          if ! test -f ${{ env.REVISION_MINOR_NUMBER_FILE }}; then
            echo 0 > ${{ env.REVISION_MINOR_NUMBER_FILE }}
          else
            echo $(($(cat ${{ env.REVISION_MINOR_NUMBER_FILE }}) + 1)) > ${{ env.REVISION_MINOR_NUMBER_FILE }}
          fi

      - name: Save revision file artifacts
        uses: actions/upload-artifact@v2
        with:
          name: revision-numbers
          path: |
            ${{ env.REVISION_MAJOR_NUMBER_FILE }}
            ${{ env.REVISION_MINOR_NUMBER_FILE }}
            
  build_publishable:
    needs: set_release_number
    runs-on: ubuntu-latest
    env:
      TEMP_SUBSTITUTION_FILE: temp_substitutions.rst
      CHECKIN_MSG_FILE: checkin_msg.temp
    steps:

    - uses: actions/checkout@v2

    - name: Download Revision Number File artifacts
      id: getRevNums
      uses: actions/download-artifact@v2
      with:
        name: revision-numbers

    - name: Update revision and build temp substitution file
      run: |
        echo "PUBLISHED_DOCUMENT_VERSION=$(cat ${{ env.REVISION_MAJOR_NUMBER_FILE }}).$(cat ${{ env.REVISION_MINOR_NUMBER_FILE }})" >> $GITHUB_ENV
        echo ".. |Date| replace:: $(date +%B\ %d\,\ %Y)"  > $TEMP_SUBSTITUTION_FILE
        echo "  "  >> $TEMP_SUBSTITUTION_FILE
        echo ".. |Revision| replace:: $(cat ${{ env.REVISION_MAJOR_NUMBER_FILE }}).$(cat ${{ env.REVISION_MINOR_NUMBER_FILE }})" >> $TEMP_SUBSTITUTION_FILE
        echo "  " >> $TEMP_SUBSTITUTION_FILE

    - name: Debug - Version Number
      run: echo "Building Document version ${{ env.PUBLISHED_DOCUMENT_VERSION }}"

    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install apt dependencies
      run: |
        sudo apt-get update && sudo apt-get -y install plantuml libxml2-dev libxslt-dev python3-dev

    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade rst2pdf 
        #python -m pip install --upgrade rst2html
        python -m pip install --upgrade rst2html5

    - name: Install Calabre
      run: |
        sudo apt-get update && sudo apt-get -y install calibre

    - name: Build pdf
      run: |
        rm -fR *.build_temp
        echo "Creating PDF..."
        rst2pdf ${{ env.PARAM_PDF_SOURCE_RST }} \
          --break-level=1 \
          --section-header-depth=1 \
          --fit-background-mode=scale \
          --smart-quotes=0 \
          --fit-literal-mode=shrink \
          --repeat-table-rows \
          --stylesheets=Cookbook.style \
          --output="${{ env.PARAM_PUBLISHED_PDF }}" \
          --strip-elements-with-class=handout \
          --extension-module=preprocess
        rm -fR *.build_temp

    - name: Build html
      run: |
        echo "Creating HTML..."
        rst2html5 \
            --stylesheet-inline=Cookbook.css \
            --strip-elements-with-class=handout \
            --strip-comments \
            ${{ env.PARAM_HTML_SOURCE_RST  }} \
            "${{ env.PARAM_PUBLISHED_HTML }}"
        rm -fR *.build_temp

    - name: Build epub
      run: |
        echo "Creating EPUB..."
        ebook-convert "${{ env.PARAM_PUBLISHED_HTML }}" "${{ env.PARAM_PUBLISHED_EPUB }}" \
          --title "Recipes From the Messy Chef" \
          --authors "Rodney Shupe" \
          --author-sort "Shupe Rodney" \
          --language English \
          --comments "A collection of recipes containing the favorites of Rodney Shupe and family." \
          --tags Cookbook,Cooking,Recipes \
          --cover Cover.png \
          --max-toc-links 29 \
          --embed-all-fonts > /dev/null

    - name: Save Published files
      uses: actions/upload-artifact@v2
      with:
        name: published-files
        path: |
          ${{ env.PARAM_PUBLISHED_PDF }}
          ${{ env.PARAM_PUBLISHED_EPUB }}

    - name: Tag and Release
      uses: jasondavis303/tag-and-release-and-upload@v1.2.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        version: v${{ env.PUBLISHED_DOCUMENT_VERSION }}
        assets: '[ "${{ env.PARAM_PUBLISHED_PDF }}", "${{ env.PARAM_PUBLISHED_EPUB }}" ]'
        overwrite: false

  publish-to_google:
    needs: build_publishable
    runs-on: ubuntu-latest
    steps:

    - name: Download latest putput files.
      uses: actions/download-artifact@v2
      with:
        name: published-files

    - name: TODO - Setup rclone and upload
      run: |
        echo "TODO: Setup rclone and upload"

  backup-via-ssh:
    needs: build_publishable
    runs-on: ubuntu-latest

    steps:

    - name: Download latest putput files.
      uses: actions/download-artifact@v2
      with:
        name: published-files

    - name: Upload via SSH
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_VPS_HOST }}
        username: ${{ secrets.SSH_VPS_USERNAME }}
        port: ${{ secrets.SSH_VPS_PORT }}
        key: ${{ secrets.SSH_VPS_KEY }}
        source: "*"
        target: "Cooking"
        overwrite: true

